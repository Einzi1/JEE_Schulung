
package de.webservice.publisher;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "InfoserviceService", targetNamespace = "http://publisher.webservice.de/", wsdlLocation = "http://localhost:9090/infoservice?wsdl")
public class InfoserviceService extends Service {

	private final static URL INFOSERVICESERVICE_WSDL_LOCATION;
	private final static WebServiceException INFOSERVICESERVICE_EXCEPTION;
	private final static QName INFOSERVICESERVICE_QNAME = new QName("http://publisher.webservice.de/",
			"InfoserviceService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL("http://localhost:9090/infoservice?wsdl");
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		INFOSERVICESERVICE_WSDL_LOCATION = url;
		INFOSERVICESERVICE_EXCEPTION = e;
	}

	public InfoserviceService() {
		super(__getWsdlLocation(), INFOSERVICESERVICE_QNAME);
	}

	public InfoserviceService(WebServiceFeature... features) {
		super(__getWsdlLocation(), INFOSERVICESERVICE_QNAME, features);
	}

	public InfoserviceService(URL wsdlLocation) {
		super(wsdlLocation, INFOSERVICESERVICE_QNAME);
	}

	public InfoserviceService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, INFOSERVICESERVICE_QNAME, features);
	}

	public InfoserviceService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public InfoserviceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns InfoserviceGen
	 */
	@WebEndpoint(name = "InfoserviceGenPort")
	public InfoserviceGen getInfoserviceGenPort() {
		return super.getPort(new QName("http://publisher.webservice.de/", "InfoserviceGenPort"), InfoserviceGen.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns InfoserviceGen
	 */
	@WebEndpoint(name = "InfoserviceGenPort")
	public InfoserviceGen getInfoserviceGenPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://publisher.webservice.de/", "InfoserviceGenPort"), InfoserviceGen.class,
				features);
	}

	private static URL __getWsdlLocation() {
		if (INFOSERVICESERVICE_EXCEPTION != null) {
			throw INFOSERVICESERVICE_EXCEPTION;
		}
		return INFOSERVICESERVICE_WSDL_LOCATION;
	}

}
